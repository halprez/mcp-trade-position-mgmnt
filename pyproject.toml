[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[project]
name = "mcp-trade-position-mgmnt"
version = "0.1.0"
description = "Trade Promotion Management MCP Server for Claude Desktop"
authors = [
    {name = "halprez", email = "jalpre@gmail.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "fastapi>=0.104.0",
    "fastmcp>=0.2.0",
    "uvicorn[standard]>=0.24.0",
    "pandas>=2.1.0",
    "numpy>=1.24.0",
    "sqlalchemy>=2.0.0",
    "psycopg2-binary>=2.9.0",
    "pydantic>=2.4.0",
    "scikit-learn>=1.3.0",
    "xgboost>=1.7.0",
    "torch>=2.0.0",
    "mlflow>=2.7.0",
    "python-dotenv>=1.0.0",
    "python-multipart>=0.0.6",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
]

notebook = [
    "jupyter>=1.0.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
]

[project.urls]
Homepage = "https://github.com/halprez/mcp-trade-position-mgmnt"
Documentation = "https://github.com/halprez/mcp-trade-position-mgmnt#readme"
Repository = "https://github.com/halprez/mcp-trade-position-mgmnt.git"
Issues = "https://github.com/halprez/mcp-trade-position-mgmnt/issues"

[project.scripts]
tpm-server = "src.main:main"
tpm-process-data = "scripts.process_data:main"

[dependency-groups]
dev = [
    "httpx>=0.28.1",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
target-version = ['py311']
line-length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = [
    "pandas.*",
    "numpy.*",
    "sklearn.*",
    "xgboost.*",
    "mlflow.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --strict-markers"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
